<?xml version="1.0"?>
<doc>
    <assembly>
        <name>gtdtimer</name>
    </assembly>
    <members>
        <member name="M:gtdtimer.ActionResults.CsvResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:gtdtimer.ActionResults.CsvResult"/> class.
            </summary>
            <param name="objectToSerialize">The object to serialize to Csv.</param>
        </member>
        <member name="P:gtdtimer.ActionResults.CsvResult.ObjectToSerialize">
            <summary>
            Gets the object to be serialized to Csv.
            </summary>
        </member>
        <member name="M:gtdtimer.ActionResults.CsvResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Serializes the object that was passed into the constructor to Csv and writes the corresponding Csv to the result stream.
            </summary>
            <param name="context">The controller context for the current request.</param>       
        </member>
        <member name="M:gtdtimer.ActionResults.XmlResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:gtdtimer.ActionResults.XmlResult"/> class.
            </summary>
            <param name="objectToSerialize">The object to serialize to XML.</param>
        </member>
        <member name="P:gtdtimer.ActionResults.XmlResult.ObjectToSerialize">
            <summary>
            Gets the object to be serialized to XML.
            </summary>
        </member>
        <member name="M:gtdtimer.ActionResults.XmlResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Serializes the object that was passed into the constructor to XML and writes the corresponding XML to the result stream.
            </summary>
            <param name="context">The controller context for the current request.</param>       
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllTasks">
            <summary>
            Returns all users' tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllActiveTasks">
            <summary>
            Returns all users' active tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllArchivedTasks">
            <summary>
            Returns all users' archived tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetTaskById(System.Int32)">
            <summary>
            Returns user's task by id.
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllTasksByUserId">
            <summary>
            Returns all user's tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllActiveTasksByUserId">
            <summary>
            Returns all user's active tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.GetAllArchivedTasksByUserId">
            <summary>
            Returns all user's archived tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.CreateTask(Common.ModelsDTO.TaskDTO)">
            <summary>
            Creates a task.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.UpdateTask(Common.ModelsDTO.TaskDTO)">
            <summary>
            Updates the task.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.DeleteTask(System.Int32)">
            <summary>
            Deletes the task by id.
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.SwitchArchivedStatus(Common.ModelsDTO.TaskDTO)">
            <summary>
            Changes IsActive status of the task.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.StartTask(Common.ModelsDTO.TaskDTO)">
            <summary>
            Sets IsRunning status of the task to true.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.PauseTask(Common.ModelsDTO.TaskDTO)">
            <summary>
            Sets IsRunning status of the task to false.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ResetTask(Common.ModelsDTO.TaskDTO)">
            <summary>
            Resets task's properties.
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllTasksAsXmlByUserId">
            <summary>
            Converts all user's tasks to xml format. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllActiveTasksAsXmlByUserId">
            <summary>
            Converts all user's active tasks to xml format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllArchivedTasksAsXmlByUserId">
            <summary>
            Converts all user's archived tasks to xml format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportTaskAsXmlById(System.Int32)">
            <summary>
            Converts  user's task by id to xml format.
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllTasksAsCsvByUserId">
            <summary>
            Converts all user's tasks to csv format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllActiveTasksAsCsvByUserId">
            <summary>
            Converts all user's active tasks to csv format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportAllArchivedTasksAsCsvByUserId">
            <summary>
            Converts all user's archived tasks to csv format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ExportTaskAsCsvById(System.Int32)">
            <summary>
            Converts  user's task by id to csv format.
            </summary>
            <param name="taskId"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ImportTasksAsCsv(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Imports file of user's tasks in .csv format.
            </summary>
            <param name="uploadFile"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.TasksController.ImportTasksAsXml(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Imports file of user's tasks in .xml format.
            </summary>
            <param name="uploadFile"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.Get">
            <summary>
            Retrieve current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.Post(Common.ModelsDTO.UserDTO)">
            <summary>
            Create user.
            </summary>
            <param name="model">The DTO model of User entity</param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.Put(Common.ModelsDTO.UpdatePasswordDTO)">
            <summary>
            Update current user password.
            </summary>
            <param name="model">The DTO model of Password entity</param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.Delete">
            <summary>
            Delete current user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.AddToRole(Common.ModelsDTO.RoleDTO)">
            <summary>
            Add role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.RemoveFromRoles(System.String,System.String)">
            <summary>
            Remove role
            </summary>
            <param name="email"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.DeleteUserByEmail(System.String)">
            <summary>
            Get users emails
            </summary>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.GetUsersEmails(System.String)">
            <summary>
            Delete user by email
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:gtdtimer.Controllers.UserController.GetRolesOfUser">
            <summary>
            Get roles of user
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
